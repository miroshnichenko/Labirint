//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;

[assembly: EdmSchemaAttribute()]

namespace Blasig.Labirint.DataModel
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class LabirintEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект LabirintEntities, используя строку соединения из раздела "LabirintEntities" файла конфигурации приложения.
        /// </summary>
        public LabirintEntities() : base("name=LabirintEntities", "LabirintEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LabirintEntities.
        /// </summary>
        public LabirintEntities(string connectionString) : base(connectionString, "LabirintEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LabirintEntities.
        /// </summary>
        public LabirintEntities(EntityConnection connection) : base(connection, "LabirintEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Visitor> Visitors
        {
            get
            {
                if ((_Visitors == null))
                {
                    _Visitors = base.CreateObjectSet<Visitor>("Visitors");
                }
                return _Visitors;
            }
        }
        private ObjectSet<Visitor> _Visitors;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Visitors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVisitors(Visitor visitor)
        {
            base.AddObject("Visitors", visitor);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Blasig.Labirint.DataModel.Conceptual", Name="Visitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Visitor : EntityObject, IDataErrorInfo
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Visitor.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="check">Исходное значение свойства Check.</param>
        /// <param name="clientName">Исходное значение свойства ClientName.</param>
        /// <param name="age">Исходное значение свойства Age.</param>
        /// <param name="withParents">Исходное значение свойства WithParents.</param>
        /// <param name="timeStart">Исходное значение свойства TimeStart.</param>
        public static Visitor CreateVisitor(global::System.Int64 id, global::System.Int32 check, global::System.String clientName, global::System.Int32 age, global::System.Boolean withParents, global::System.DateTime timeStart)
        {
            Visitor visitor = new Visitor();
            visitor.ID = id;
            visitor.Check = check;
            visitor.ClientName = clientName;
            visitor.Age = age;
            visitor.WithParents = withParents;
            visitor.TimeStart = timeStart;
            return visitor;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Check
        {
            get
            {
                return _Check;
            }
            set
            {
                OnCheckChanging(value);
                ReportPropertyChanging("Check");
                _Check = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Check");
                OnCheckChanged();
            }
        }
        private global::System.Int32 _Check;
        partial void OnCheckChanging(global::System.Int32 value);
        partial void OnCheckChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WithParents
        {
            get
            {
                return _WithParents;
            }
            set
            {
                OnWithParentsChanging(value);
                ReportPropertyChanging("WithParents");
                _WithParents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WithParents");
                OnWithParentsChanged();
            }
        }
        private global::System.Boolean _WithParents;
        partial void OnWithParentsChanging(global::System.Boolean value);
        partial void OnWithParentsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStart
        {
            get
            {
                return _TimeStart;
            }
            set
            {
                OnTimeStartChanging(value);
                ReportPropertyChanging("TimeStart");
                _TimeStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStart");
                OnTimeStartChanged();
            }
        }
        private global::System.DateTime _TimeStart;
        partial void OnTimeStartChanging(global::System.DateTime value);
        partial void OnTimeStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Paid
        {
            get
            {
                return _Paid;
            }
            set
            {
                OnPaidChanging(value);
                ReportPropertyChanging("Paid");
                _Paid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Paid");
                OnPaidChanged();
            }
        }
        private Nullable<global::System.Int32> _Paid;
        partial void OnPaidChanging(Nullable<global::System.Int32> value);
        partial void OnPaidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeEnd
        {
            get
            {
                return _TimeEnd;
            }
            set
            {
                OnTimeEndChanging(value);
                ReportPropertyChanging("TimeEnd");
                _TimeEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeEnd");
                OnTimeEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeEnd;
        partial void OnTimeEndChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeEndChanged();

        #endregion
        #region Проверка правильности данных
        private Dictionary<string, string> errors = new Dictionary<string, string>();

        public string Error
        {
            get
            {
                if (errors.Count == 0)
                    return null;
                else
                {
                    StringBuilder builder = new StringBuilder();
                    var errEnumerator = errors.Values.GetEnumerator();
                    while (errEnumerator.MoveNext())
                        builder.AppendLine(errEnumerator.Current);
                    return builder.ToString();
                }
            }
        }

        public string this[string property]
        {
            get
            {
                string error = null;
                switch (property)
                {
                    case "ClientName":
                        if (ClientName.Trim().Length < 3)
                            error = "Длина имени клиента дожна быть не менее 3 символов";
                        break;
                    case "Telephone":
                        {
                            Regex regex = new Regex(@"^\d{10}$", RegexOptions.Compiled);
                            if (WithParents && Telephone.Trim().Length == 0)
                                break;
                            if (!regex.IsMatch(Telephone.Trim()))
                                error = "Номер телефона должен состоять из 10 цифр.\nНапример, 0671234567";
                            break;
                        }
                    default:
                        throw new ArgumentException("Неизвестное свойство " + property);
                }

                if (error != null && !errors.ContainsKey(property))
                    errors.Add(property, error);
                if (error == null && errors.ContainsKey(property))
                    errors.Remove(property);

                return error;
            }
        }
        #endregion
    }

    #endregion
    
}
